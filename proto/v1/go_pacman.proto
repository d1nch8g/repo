syntax = "proto3";
package proto.v1;

import "proto/annotations/annotations.proto";

option go_package = "gen/go/pb";

// Service containing method for adding aur packages
service PacmanService {
  // Add new packages from AUR package registry
  rpc Add(AddRequest) returns (AddResponse) {
    option (google.api.http) = {
      put: "/add"
      body: "*"
    };
  }

  // Check wether some package exists in repository
  rpc Search(SearchRequest) returns (SearchResponse) {
    option (google.api.http) = {get: "/search/{pattern}"};
  }

  // Update all packages from AUR
  rpc Update(UpdateRequest) returns (UpdateResponse) {
    option (google.api.http) = {
      post: "/update"
      body: "*"
    };
  }

  // Get package description from pacman
  rpc Describe(DescribeRequest) returns (DescribeResponse) {
    option (google.api.http) = {get: "/describe"};
  }

  // Get overall statistics from service
  rpc Stats(StatsRequest) returns (StatsResponse) {
    option (google.api.http) = {get: "/stats"};
  }
}

// List of packages from AUR to add
message AddRequest {
  repeated string packages = 1;
  string token = 2;
}

message AddResponse {}

// Search pattern that will be used in search text field
message SearchRequest {
  string pattern = 1;
}

// List of package names
message SearchResponse {
  repeated string packages = 1;
}

message UpdateRequest {
  string token = 1;
}

message UpdateResponse {}

message DescribeRequest {
  string package = 1;
}

message DescribeResponse {
  map<string, string> fields = 1;
}

message StatsRequest {}

message StatsResponse {
  // Overall count of installed packages
  int32 packages_count = 1;
  // Count of outdated packages, that needs upgrade (can be shown in chart)
  int32 outdated_count = 2;
  // List of packages that require update
  repeated string outdated_packages = 3;
}
