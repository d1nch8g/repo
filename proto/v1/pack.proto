// 2023 FMNX team.
// Use of this code is governed by GNU General Public License.
// Additional information can be found on official web page: https://fmnx.su/
// Contact email: help@fmnx.su

syntax = "proto3";
package proto.v1;

option go_package = "gen/go/pb";

service PackService {
  // Add new packages with pack add
  rpc Add(AddRequest) returns (AddResponse);

  // Update all packages with pack
  rpc Update(UpdateRequest) returns (UpdateResponse);

  // Check wether some package exists in repository
  rpc Search(SearchRequest) returns (SearchResponse);

  // Get package description from pacman
  rpc Describe(DescribeRequest) returns (DescribeResponse);

  // Get overall statistics from service
  rpc Stats(StatsRequest) returns (StatsResponse);

  // Login and recieve token for other communications
  rpc Login(LoginRequest) returns (LoginResponse);

  // A call used to check wether token is up to date in current session
  rpc CheckToken(CheckTokenRequest) returns (CheckTokenResponse);

  // Remove package from repository
  rpc Remove(RemoveRequest) returns (RemoveResponse);

  // Upload file with .pkg.tar.zst package for database
  rpc Upload(UploadRequest) returns (UploadResponse);
}

// List of packages or git links
message AddRequest {
  repeated string packages = 1;
  string token = 2;
}

message AddResponse {}

// Search pattern that will be used in search text field
message SearchRequest {
  string pattern = 1;
}

// List of package names
message SearchResponse {
  repeated string packages = 1;
}

message UpdateRequest {
  string token = 1;
}

message UpdateResponse {}

message DescribeRequest {
  string package = 1;
}

message DescribeResponse {
  string name = 1;
  string version = 2;
  string description = 3;
  string size = 4;
  string url = 5;
  string build_date = 6;
  string pack_name = 7;
  string pack_version = 8;
  string pack_branch = 9;
  string depends_on = 10;
  string required_by = 11;
}

message StatsRequest {}

message StatsResponse {
  // Overall count of installed packages
  int32 packages_count = 1;
  // Count of outdated packages, that needs upgrade (can be shown in chart)
  int32 outdated_count = 2;
  // List of packages that require update
  repeated OutdatedPackage outdated_packages = 3;
}

message OutdatedPackage {
  string name = 1;
  string current_version = 2;
  string latest_version = 3;
}

message LoginRequest {
  string login = 1;
  string password = 2;
}

message LoginResponse {
  string token = 1;
}

message CheckTokenRequest {
  string token = 1;
}

message CheckTokenResponse {
  bool up_to_date = 1;
}

message UploadRequest {
  bytes content = 1;
  string name = 2;
  string token = 3;
}

message UploadResponse {}

message RemoveRequest {
  string package = 1;
  string token = 2;
}

message RemoveResponse {}
